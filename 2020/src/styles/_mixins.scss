/**
* bg-color: CSS variable (see _vars.scss)
* border-color: CSS variable (see _vars.scss)
*/
@mixin container($bg-color: red, $border-color: off-white) {
  display: flex;
  flex-direction: column;
  padding: 7px 5px;
  margin: 0 clamp(5px, 1.39vw, 20px);
  background: var(--#{$bg-color});
  border: 1px solid var(--#{$border-color});
  border-radius: 1px;
}

/**
* bg-color: CSS variable (see _vars.scss)
* dot-color: CSS variable (see _vars.scss)
*/
@mixin dotsBackground(
  $dot-size: 12px,
  // $dot-space: 50px,
  $bg-color: red,
  $dot-color: off-white
) {
  background-image: radial-gradient(var(--$dot-color) 10%, transparent 0%);
  background-color: var(--$bg-color);
  // background-position: 0 0, $dot-space $dot-space;
  background-size: $dot-size $dot-size;
}

/*
 This mixin is used to create a container of a specific aspect ratio
 $container-width: value should be percent ex. 100%, 90%
 $height: value should be a number i.e. 1.3, 1.4. (height ratio relative to width)
 The mixin will handle converting it into a percentage
*/
@mixin container-aspect-ratio($container-width, $height) {
  // Container for image
  position: relative;
  width: $container-width;
  display: block;
  overflow: hidden;
  &::before {
    content: "";
    float: left;
    padding-top: $height * 100%;
  }
}

@mixin button-reset {
  appearance: none;
  padding: 0;
  background: none;
  border: 0;
  outline: none;
  font-size: inherit;
  font-weight: inherit;
  font-family: inherit;
  cursor: pointer;

  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  &:focus {
    outline: none;
  }
}

%list-reset {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 list of z-indexes
 usage:
 .selector {
  z-index: z('on-top');
 }
*/
$z-layers: (
  "on-top": 9999,
);

// get z-index from z-layers
@function z($name) {
  @return map_get($z-layers, $name);
}

// add to z-layers
@mixin z-index($name) {
  z-index: z($name);
}
